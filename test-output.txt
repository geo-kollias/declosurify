scala.this.Predef.println(scala.this.Predef.intArrayOps({
  def local1(p1: Int): Int = p1.*(10);
  val buf: scala.collection.mutable.ArrayBuilder[Int] = newBuilder[Int](ClassTag.Int);
  val xs: Array[Int] = scala.Array.apply(1, 2, 3);
  var i: Int = 0;
  while$1(){
    if (i.<(xs.length))
      {
        {
          buf.+=(local1(xs.apply(i)));
          i = i.+(1)
        };
        while$1()
      }
    else
      ()
  };
  buf.result()
}).mkString("Array(", ", ", ")"))
{
  {
    def local2(p2: Int): Unit = scala.this.Predef.print(p2.*(10).+(" "));
    ();
    val xs: Array[Int] = scala.Array.apply(1, 2, 3);
    var i: Int = 0;
    while$1(){
      if (i.<(xs.length))
        {
          {
            local2(xs.apply(i));
            i = i.+(1)
          };
          while$1()
        }
      else
        ()
    };
    ()
  };
  scala.this.Predef.println("")
}
scala.this.Predef.println({
  def local3(p3: Int): Int = p3.*(10);
  val buf: scala.collection.mutable.Builder[Int,List[Int]] = newBuilder[Int];
  var these: List[Int] = immutable.this.List.apply[Int](1, 2, 3);
  while$2(){
    if (these.isEmpty.unary_!)
      {
        {
          buf.+=(local3(these.head));
          these = these.tail
        };
        while$2()
      }
    else
      ()
  };
  buf.result()
})
{
  {
    def local4(p4: Int): Unit = scala.this.Predef.print(p4.*(10).+(" "));
    ();
    var these: List[Int] = immutable.this.List.apply[Int](1, 2, 3);
    while$2(){
      if (these.isEmpty.unary_!)
        {
          {
            local4(these.head);
            these = these.tail
          };
          while$2()
        }
      else
        ()
    };
    ()
  };
  scala.this.Predef.println("")
}
scala.this.Predef.println({
  def local5(p5: Int): Int = p5.*(10);
  val buf: scala.collection.mutable.Builder[Int,scala.collection.immutable.Vector[Int]] = newBuilder[Int];
  val xs: scala.collection.immutable.Vector[Int] = scala.collection.immutable.Vector.apply[Int](1, 2, 3);
  var i: Int = 0;
  while$1(){
    if (i.<(xs.length))
      {
        {
          buf.+=(local5(xs.apply(i)));
          i = i.+(1)
        };
        while$1()
      }
    else
      ()
  };
  buf.result()
})
{
  {
    def local6(p6: Int): Unit = scala.this.Predef.print(p6.*(10).+(" "));
    ();
    val xs: scala.collection.immutable.Vector[Int] = scala.collection.immutable.Vector.apply[Int](1, 2, 3);
    var i: Int = 0;
    while$1(){
      if (i.<(xs.length))
        {
          {
            local6(xs.apply(i));
            i = i.+(1)
          };
          while$1()
        }
      else
        ()
    };
    ()
  };
  scala.this.Predef.println("")
}
scala.this.Predef.println({
  def local7(p7: Int): Int = p7.*(10);
  val buf: scala.collection.mutable.Builder[Int,scala.collection.immutable.Traversable[Int]] = newBuilder[Int];
  val it: Iterator[Int] = scala.collection.immutable.Traversable.apply[Int](1, 2, 3).toIterator.toIterator;
  while$3(){
    if (it.hasNext)
      {
        buf.+=(local7(it.next()));
        while$3()
      }
    else
      ()
  };
  buf.result()
})
{
  {
    def local8(p8: Int): Unit = scala.this.Predef.print(p8.*(10).+(" "));
    ();
    val it: Iterator[Int] = scala.collection.immutable.Traversable.apply[Int](1, 2, 3).toIterator.toIterator;
    while$3(){
      if (it.hasNext)
        {
          local8(it.next());
          while$3()
        }
      else
        ()
    };
    ()
  };
  scala.this.Predef.println("")
}
[info] Running MooMoo
Array(10, 20, 30)
10 20 30
List(10, 20, 30)
10 20 30
Vector(10, 20, 30)
10 20 30
List(10, 20, 30)
10 20 30
